{
  "name": "ddp",
  "version": "0.3.2",
  "description": "Node.js module to connect to servers using DDP protocol.",
  "author": {
    "name": "Tom Coleman",
    "email": "tom@thesnail.org",
    "url": "http://tom.thesnail.org"
  },
  "main": "lib/ddp-client",
  "keywords": [
    "ddp",
    "meteor",
    "protocol"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/oortcloud/node-ddp-client.git"
  },
  "dependencies": {
    "ws": ">=0.4.23",
    "underscore": ">=1.3.3"
  },
  "engines": {
    "node": "*"
  },
  "readme": "Node DDP Client\n===============\n\nA callback style DDP ([Meteor](http://meteor.com/)'s Distributed Data Protocol) node client.\n\nBased _heavily_ on alansikora's [node-js_ddp-client](https://github.com/alansikora/node-js_ddp-client), and meteor's python client. Uses a more callback style approach.\n\nThe client implements the pre1 version of DDP. It is unfinished at this point, but should do most of what you want it to do.\n\nInstallation\n============\n\n```\n  npm install ddp\n```\n\nExample\n=======\n\nPlease see the example in `examples/example.js`. Or here for reference:\n\n```js\nvar DDPClient = require(\"ddp\");\n\nvar ddpclient = new DDPClient({\n    host: \"localhost\", \n    port: 3000,\n    /* optional: */\n    auto_reconnect: true,\n    auto_reconnect_timer: 500\n  });\n\nddpclient.connect(function(error) {\n  if (error) {\n    console.log('DDP connection error!');\n    return;\n  }\n  \n  console.log('connected!');\n  \n  ddpclient.call('test-function', ['foo', 'bar'], function(err, result) {\n    console.log('called function, result: ' + result);\n  })\n  \n  ddpclient.subscribe('posts', [], function() {\n    console.log('posts complete:');\n    console.log(ddpclient.collections.posts);\n  })\n});\n\n/*\n * Useful for debugging and learning the ddp protocol\n */\nddpclient.on('message', function(msg) {\n\tconsole.log(\"ddp message: \" + msg);\n});\t\n\n/* \n * If you need to do something specific on close or errors.\n * (You can also disable auto_reconnect and call ddpclient.connect()\n *  when you are ready to re-connect.)\n*/\nddpclient.on('socket-close', function(code, message) {\n  console.log(\"Close: %s %s\", code, message);\n});\nddpclient.on('socket-error', function(error) {\n  console.log(\"Error: %j\", error);\n});\n```\n\nUnimplemented Features\n====\n* Server to Client messages\n  * 'addedBefore'\n  * 'movedBefore'\n  * 'error'\n  * 'updated'\n* EJSON support\n\n\n\nThanks\n======\n\nMany thanks to Alan Sikora for the ddp-client which formed the inspiration for this code.\n\nContributions:\n * Tom Coleman (@tmeasday)\n * Thomas Sarlandie (@sarfata)\n * Mason Gravitt (@emgee3)\n * Mike Bannister (@possiblities)\n * Chris Mather (@eventedmind)\n",
  "readmeFilename": "README.markdown",
  "_id": "ddp@0.3.2",
  "_from": "ddp@>=0.3.1"
}
