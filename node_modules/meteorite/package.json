{
  "name": "meteorite",
  "version": "0.5.1",
  "homepage": "http://oortcloud.github.com/meteorite",
  "engines": [
    "node >=0.6.0"
  ],
  "description": "Installer & smart package manager for Meteor",
  "author": {
    "name": "Mike Bannister",
    "email": "notimpossiblemike@gmail.com",
    "url": "http://po.ssibiliti.es"
  },
  "dependencies": {
    "ddp": ">=0.3.1",
    "underscore": ">=1.3.3",
    "wrench": ">=1.3.9",
    "fstream": ">=0.1.18",
    "optimist": ">=0.3.4",
    "prompt": "0.2.3",
    "colors": "0.6.0-1"
  },
  "devDependencies": {
    "mocha": ">=1.2.2",
    "connect": ">=2.3.6"
  },
  "scripts": {
    "test": "mocha spec/unit spec/acceptance -t 240000 -R spec",
    "flushcache": "rm -rf spec/support/cache"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/oortcloud/meteorite.git"
  },
  "bin": {
    "mrt": "./bin/mrt.js"
  },
  "readme": "# Meteorite\n\nMeteorite is a Meteor version manager and package manager. It provides an easy way to run different versions of meteor, use non-core packages, and to install packages from the [Atmosphere package repository](https://atmosphere.meteor.com/). Meteorite provides the `mrt` command that wraps the `meteor` command, and should be used in its place.\n\n``` sh\n# Create an app based on Meteor's devel branch.\n$ mrt create my-app --branch devel\n$ cd my-app\n# Install an Atmosphere package, recursively fetching dependencies.\n$ mrt add router\n# Check for and install any updates, and run the app.\n$ mrt\n```\n\n## Installing Meteorite\n\nMeteorite can be installed via [npm](https://npmjs.org/).\n\n``` sh\n$ sudo npm install -g meteorite\n```\n\n### NOTES\n\n- Meteor is not officially supported on windows; you can run it thanks to [Tom Wijman's excellent work](http://win.meteor.com). However, meteorite's git based approach runs counter to the MSI installation that's required to get it working. So meteorite *does not* work under windows right now. Pull Requests which change this would be gladly accepted!\n\n- Meteorite does not work on Ubuntu 12.04's default Node.js v0.6 ([issue #67](https://github.com/oortcloud/meteorite/issues/67)). To fix this, install a recent version of Node.js via [this PPA](https://launchpad.net/~chris-lea/+archive/node.js/) or by compiling from source.\n\n- You'll also need to ensure you have [git](http://git-scm.com) installed and available in your path.\n\n\n## Usage\n\n### `mrt create <name>`\n\nWorks like `meteor create`, but you can specify the desired branch, tag or reference of [Meteor's git repository](https://github.com/meteor/meteor) that the app should be based on.\n\n``` sh\n# By default, apps are based on Meteor's master branch.\n$ mrt create cool-app\n# You can create apps based on a branch of Meteor's repo.\n$ mrt create risky-app --branch devel\n# Or, on a tag (such as version numbers).\n$ mrt create safe-app --tag v0.5.4\n# Or, or on a commit.\n$ mrt create choosy-app --ref a9a717\n```\n\n### `mrt add <package>`\n\nWorks like `meteor add`, but if the package isn't one of Meteor's included packages, it installs it from [Atmosphere](https://atmosphere.meteor.com).\n\nUnlike `meteor add`, only one package can be added at a time with `mrt add`.\n\n``` sh\n# Add the latest version of the moment package on Atmosphere.\n$ mrt add moment\n# Add a specific version of a package.\n$ mrt add router --version 0.3.4\n# Meteorite will install page.js too, because router depends on it.\n```\n\n### `mrt run`\n\nWorks like `meteor run`, but checks and installs the app's desired Meteor version and package dependencies before running the app.\n\n### `mrt update`\n\nInstalls any available updates to the app's desired Meteor version and packages.\n\n### Other commands\n\nWhen Meteorite is executed for an app, it checks or installs the app's desired Meteor version, packages and dependencies, then does the required book-keeping (described below), and finally passes the command onto `meteor`. \n\nFor that reason, it's usually best to use `mrt` for all meteor related commands. For instance, to generate the correct bundle, you'll need to use `mrt bundle`, or `mrt deploy` when deploying to meteor.com.\n\n## How Meteorite works\n\nApps tell Meteorite the Meteor version and packages they want with a file called `smart.json` in their root directory. Meteorite will install those dependencies the next time it is executed within that app.\n\nMeteorite writes to a `smart.lock` file in the app's root directory to track the exact versions of its dependencies, even when it's set up in a fresh environment. You should check the `smart.lock` file into your app's version control, to ensure that other developers are running the same versions of the dependencies. Any changes in `smart.json` take precendency over `smart.lock`. The `smart.lock` file is reset with the `mrt update` command.\n\n### Example `smart.json`\n\nThe `meteor` property is not required: apps will depend on Meteor's master branch by default. You can specify `meteor.branch`, `meteor.tag` or `meteor.git` to use alternate branches, tags and forks respectively.\n\n``` json\n{\n  \"meteor\": {\n    \"tag\": \"v0.5.4\"\n  },\n  \"packages\": {\n    \"moment\": {},\n    \"router\": \"0.3.4\",\n    \"roles\": {\n      \"version\": \"1.0.1\"\n    },\n    \"accounts-persona\": {\n      \"git\": \"https://github.com/vladikoff/meteor-accounts-persona\"\n    },\n    \"normalize.css\": {\n      \"git\": \"https://github.com/rithis/meteor-normalize.css\",\n      \"tag\": \"v2.0.1\"\n    },\n    \"my-experiment\": {\n      \"path\": \"/path/to/local/package\"\n    }\n  }\n}\n```\n\n## Writing Meteorite packages\n\nMeteorite packages include a `smart.json` file in their root directory to provide information about the package, and to list their dependencies. For an example, see [Meteor Router's `smart.json`](https://github.com/tmeasday/meteor-router/blob/master/smart.json).\n\nMeteorite packages also include a `package.js` file in their root directory to tell Meteorite how it should be installed. For an example, see [Meteor Roles' `package.js`](https://github.com/alanning/meteor-roles/blob/master/roles/package.js).\n\nSee [Atmosphere's documentation on writing packages](https://atmosphere.meteor.com/wtf/package) for more information.\n\n## Contributing\n\nContributions to meteorite are very welcome! Please see the [Contribution Guide](https://github.com/oortcloud/meteorite/blob/master/CONTRIBUTING.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "meteorite@0.5.1",
  "_from": "meteorite@"
}
